---
# Download, compile and install ocserv and its dependencies
- import_tasks: install.yml

- name: Create the ocserv configuration directory
  file:
    path: "{{ ocserv_path }}"
    owner: root
    group: root
    mode: 0750
    state: directory

- name: Generate the ocserv init script
  template:
    src: ocserv-init.j2
    dest: /etc/init.d/ocserv
    owner: root
    group: root
    mode: 0755

- name: Enable the ocserv init script so the service will start at boot
  command: update-rc.d ocserv defaults
  args:
    creates: /etc/rc0.d/K20ocserv

- include_role:
    name: certificates
  vars:
    ca_path:            "{{ ocserv_path }}"
    tls_ca:             "{{ ocserv_ca }}"
    tls_client_path:    "{{ ocserv_path }}"
    vpn_name:           "ocserv"
    generate_ca_server: yes
    generate_client:    yes
    generate_pkcs:      yes
    tls_server_common_name_file: "{{ ocserv_server_common_name_file }}"
    tls_sans:
      - "{{ streisand_ipv4_address }}"

- name: Generate a random ocserv password
  shell: grep -v -P "[\x80-\xFF]" /usr/share/dict/american-english-huge | sed -e "s/'//" | shuf -n 4 | xargs | sed -e 's/ /-/g' > {{ ocserv_password_file }}
  args:
    creates: "{{ ocserv_password_file }}"

- name: Set permissions on the unhashed ocserv password file
  file:
    path: "{{ ocserv_password_file }}"
    owner: root
    group: root
    mode: 0600

- name: Register the ocserv password
  command: cat {{ ocserv_password_file }}
  register: ocserv_password
  changed_when: False

- name: Create an ocpasswd credentials file
  expect:
    command: ocpasswd -c {{ ocserv_hashed_password_file }} streisand
    responses:
      "Enter password": "{{ ocserv_password.stdout }}"
      "Re-enter password": "{{ ocserv_password.stdout }}"
    creates: "{{ ocserv_hashed_password_file }}"

- name: Generate the ocserv configuration file
  template:
    src: config.j2
    dest: "{{ ocserv_config_file }}"
    owner: root
    group: root
    mode: 0600
  notify: Restart ocserv

# Set up the openconnect firewall rules
- import_tasks: firewall.yml

# Generate Gateway documentation
- import_tasks: docs.yml

# Mirror the OpenConnect clients
- import_tasks: mirror.yml
