---
- name: Install UFW
  apt:
    name: ufw

- name: Disable UFW logging
  lineinfile:
    dest: /etc/ufw/ufw.conf
    regexp: "^LOGLEVEL"
    line: "LOGLEVEL=off"

- name: Change the default forward policy
  lineinfile:
    dest: /etc/default/ufw
    regexp: "^DEFAULT_FORWARD_POLICY"
    line: 'DEFAULT_FORWARD_POLICY="ACCEPT"'

- name: Ensure UFW allows SSH
  ufw:
    to_port: "{{ ssh_port }}"
    proto: "tcp"
    rule: "allow"

- name: Ensure UFW is enabled and denies by default
  ufw:
    state: "enabled"
    policy: "deny"
    direction: "incoming"

- name: Ensure UFW allows L2TP/IPSec
  when: hostvars.localhost.enable_l2tp_ipsec
  ufw:
    to_port: "{{ item }}"
    proto: "udp"
    rule: "allow"
  with_items:
    - "500"
    - "1701"
    - "4500"

- name: Ensure UFW allows nginx
  ufw:
    to_port: "{{ nginx_port }}"
    proto: "tcp"
    rule: "allow"

- name: Ensure UFW allows DNS requests from OpenConnect clients
  when: hostvars.localhost.enable_openconnect
  ufw:
    to_port: "53"
    proto: "udp"
    rule: "allow"
    from_ip: "192.168.1.0/24"

- name: Ensure UFW allows OpenConnect (ocserv)
  when: hostvars.localhost.enable_openconnect
  ufw:
    to_port: "{{ ocserv_port }}"
    proto: "any"
    rule: "allow"

- name: Ensure UFW allows DNS requests from OpenVPN clients
  when: hostvars.localhost.enable_openvpn
  ufw:
    to_port: "53"
    proto: "udp"
    rule: "allow"
    from_ip: "10.8.0.0/24"

- name: Ensure UFW allows DNS requests from OpenVPN UDP clients
  when: hostvars.localhost.enable_openvpn
  ufw:
    to_port: "53"
    proto: "udp"
    rule: "allow"
    from_ip: "10.9.0.0/24"

- name: Ensure UFW allows OpenVPN
  when: hostvars.localhost.enable_openvpn
  ufw:
    to_port: "{{ openvpn_port }}"
    proto: "tcp"
    rule: "allow"

- name: Ensure UFW allows OpenVPN over UDP
  when: hostvars.localhost.enable_openvpn
  ufw:
    to_port: "{{ openvpn_port_udp }}"
    proto: "udp"
    rule: "allow"

- name: Ensure UFW allows Shadowsocks
  when: hostvars.localhost.enable_shadowsocks
  ufw:
    to_port: "{{ shadowsocks_server_port }}"
    proto: "any"
    rule: "allow"

- name: Ensure UFW allows stunnel
  when: hostvars.localhost.enable_stunnel
  ufw:
    to_port: "{{ stunnel_remote_port }}"
    proto: "tcp"
    rule: "allow"

- name: Ensure UFW allows Tor bridge
  when: hostvars.localhost.enable_tor
  ufw:
    to_port: "{{ tor_orport }}"
    proto: "tcp"
    rule: "allow"

- name: Ensure UFW allows Tor obfs4 pluggable transport
  when: hostvars.localhost.enable_tor
  ufw:
    to_port: "{{ tor_obfs4_port }}"
    proto: "tcp"
    rule: "allow"

- name: Ensure UFW allows DNS requests from WireGuard clients
  when: hostvars.localhost.enable_wireguard
  ufw:
    to_port: "53"
    proto: "udp"
    rule: "allow"
    from_ip: "10.192.122.0/24"

- name: Ensure UFW allows WireGuard
  when: hostvars.localhost.enable_wireguard
  ufw:
    to_port: "{{ wireguard_port }}"
    proto: "udp"
    rule: "allow"
