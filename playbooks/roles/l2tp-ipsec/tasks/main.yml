---
- name: Install the Libreswan dependencies that are required for compilation
  apt:
    name: "{{ item }}"
  with_items: "{{ libreswan_compilation_dependencies }}"

- name: Install xl2tpd
  apt:
    name: xl2tpd

- name: Install xmlto (without the extraordinarily large number of packages it normally recommends)
  apt:
    name: xmlto
    install_recommends: no

- name: Retrieve the Libreswan source code
  get_url:
    # This CDN mirrors the Libreswan source code, and helps
    # mitigate connection errors that were occurring when
    # using the project's official download location.
    url: https://d25kfp60e9u1dw.cloudfront.net/{{ libreswan_source_filename }}
    dest: "{{ libreswan_source_location }}"
    checksum: "{{ libreswan_checksum }}"
    owner: root
    group: root
    mode: 0644

- name: Extract the Libreswan source code
  unarchive:
    copy: no
    src: "{{ libreswan_source_location }}"
    dest: /usr/local/src
    owner: root
    group: root
    creates: "{{ libreswan_compilation_directory }}/README"

- name: Compile and install Libreswan (this will take a while)
  shell: make -j {{ ansible_processor_cores }} programs && make install
  args:
    chdir: "{{ libreswan_compilation_directory }}"

- name: Generate IPsec configuration file
  template:
    src: ipsec.conf.j2
    dest: /etc/ipsec.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart Libreswan

- name: Generate a random IPsec pre-shared key
  shell: grep -v -P "[\x80-\xFF]" /usr/share/dict/american-english-huge | sed -e "s/'//" | shuf -n 3 | xargs | sed -e 's/ /-/g' > {{ ipsec_preshared_key_file }}
  args:
    creates: "{{ ipsec_preshared_key_file }}"

- name: Set permissions on the IPsec pre-shared key
  file:
    path: "{{ ipsec_preshared_key_file }}"
    owner: root
    group: root
    mode: 0600

- name: Register the IPsec pre-shared key
  command: cat {{ ipsec_preshared_key_file }}
  register: ipsec_preshared_key

- name: Generate IPsec secrets file
  template:
    src: ipsec.secrets.j2
    dest: /etc/ipsec.secrets
    owner: root
    group: root
    mode: 0600

- name: Generate xl2tpd configuration file
  template:
    src: xl2tpd.conf.j2
    dest: /etc/xl2tpd/xl2tpd.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart xl2tpd

- name: Copy xl2tpd secrets file
  copy:
    src: l2tp-secrets
    dest: /etc/xl2tpd/l2tp-secrets
    owner: root
    group: root
    mode: 0600

- name: Generate PPP options file
  template:
    src: options.xl2tpd.j2
    dest: "{{ ppp_options_file }}"
    owner: root
    group: root
    mode: 0644

- name: Generate a random CHAP password
  shell: grep -v -P "[\x80-\xFF]" /usr/share/dict/american-english-huge | sed -e "s/'//" | shuf -n 2 | xargs | sed -e 's/ /-/g' > {{ chap_password_file }}
  args:
    creates: "{{ chap_password_file }}"

- name: Set permissions on the CHAP password
  file:
    path: "{{ chap_password_file }}"
    owner: root
    group: root
    mode: 0600

- name: Register the CHAP password
  command: cat {{ chap_password_file }}
  register: chap_password

- name: Generate CHAP secrets file
  template:
    src: chap-secrets.j2
    dest: /etc/ppp/chap-secrets
    owner: root
    group: root
    mode: 0600

- block:
    - name: Include the L2TP/IPsec sysctl value variables
      include_vars: sysctl-values.yml

    - name: Apply the sysctl values
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
      with_items: "{{ l2tp_ipsec_sysctl_values }}"
  when: ansible_virtualization_type != 'lxc'

- name: Ensure redirects are disabled immediately
  shell: echo 0 | tee /proc/sys/net/ipv4/conf/*/*_redirects

- name: Allow L2TP/IPsec through the firewall
  command: "{{ item }}"
  with_items: "{{ l2tp_ipsec_firewall_rules }}"

- name: Generate a certificate database file
  script: generate-certificate-database.sh
  args:
    creates: /etc/ipsec.d/cert8.db

- name: Create the L2TP/IPsec Gateway directory
  file:
    path: "{{ l2tp_ipsec_gateway_location }}"
    owner: www-data
    group: www-data
    mode: 0750
    state: directory

- name: Generate the Markdown L2TP/IPsec instructions
  template:
    src: instructions.md.j2
    dest: "{{ l2tp_ipsec_markdown_instructions }}"

- name: Convert the Markdown L2TP/IPsec instructions into HTML and surround them with the header and footer template
  shell: markdown {{ l2tp_ipsec_markdown_instructions }} | cat {{ streisand_header_template }} - {{ streisand_footer_template }} > {{ l2tp_ipsec_html_instructions }}
