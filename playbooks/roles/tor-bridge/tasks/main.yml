---
- name: "Add the Tor APT key; hiding 200 lines of log..."
  apt_key:
    id: 886DDD89
    data: "{{ item }}"
  with_file: tor-signing.key
  no_log: True

- name: Add the Tor repository
  apt_repository:
    repo: 'deb https://deb.torproject.org/torproject.org {{ ansible_lsb.codename }} main'
  register: tor_add_apt_repository
  until: not tor_add_apt_repository.failed
  retries: "{{ apt_repository_retries }}"
  delay: "{{ apt_repository_delay }}"

- name: Install the package to keep the Tor signing key current
  apt:
    package: deb.torproject.org-keyring

- name: Install obfs4 and Tor
  apt:
    package:
      - obfs4proxy
      - tor

# Update the firewall to allow Tor and obfs4proxy
# NOTE(@cpu): we do this early in the role because the Tor daemon will check if
# the obfs4proxy port is externally accessible during startup and we want to
# make sure it is.
- import_tasks: firewall.yml

- name: Generate a random Nickname for the bridge
  shell: "{{ streisand_word_gen.tor_nickname | trim }} > {{ tor_bridge_nickname_file }}"
  args:
    creates: "{{ tor_bridge_nickname_file }}"

- name: Register the bridge's random Nickname
  command: cat {{ tor_bridge_nickname_file }}
  register: tor_bridge_nickname
  changed_when: False

- name: Generate the bridge config file
  template:
    src: torrc.j2
    dest: /etc/tor/torrc
    owner: root
    group: root
    mode: 0644

# TODO(@cpu) - This should be removed once it isn't required, maybe in the next
# release after tor 0.3.0.9
- name: Copy a local override for the Tor AppArmor profile in place
  copy:
    src: apparmor-local-override
    dest: /etc/apparmor.d/local/system_tor
    owner: root
    group: root
    mode: 0644

# TODO(@cpu) - In theory it seems like it should be possible to add the
# following to the local override from above:
#     /usr/bin/obfsproxy ix,
#     /usr/bin/obfs4proxy ix,
# but doing so results in an error from the existing `PUx` modifiers:
#     profile system_tor: has merged rule /usr/bin/obfs4proxy with conflicting x modifiers
# in the interest of fixing a regression we work around this by changing the
# dist provided `/etc/apparmor.d/abstractions/tor` file.
- name: Fix the distro Tor apparmor abstraction
  replace:
    path: /etc/apparmor.d/abstractions/tor
    regexp: '^([\s]*)/usr/bin/(obfs4?proxy) PUx,$'
    replace: '\1/usr/bin/\2 ix,'
    backup: yes

- name: Reload the system_tor AppArmor profile for the override to take effect
  command: apparmor_parser -r /etc/apparmor.d/system_tor

- name: Restart Tor so the server fingerprint will be available in the state file, and the hidden service for the Gateway will start running
  service:
    name: tor
    state: restarted

- name: Wait until obfs4proxy information has shown up in its state file
  wait_for:
    path: "{{ tor_obfs_state_directory }}/obfs4_state.json"
    search_regex: "node-id"

- name: Wait until the hidden service is online
  wait_for:
    path: "{{ tor_hidden_service_directory }}/hostname"

- name: Wait until the server fingerprint file is generated
  wait_for:
    path: "{{ tor_state_directory }}/fingerprint"

- name: Register the Tor Hidden Service hostname
  command: cat {{ tor_hidden_service_directory }}/hostname
  register: tor_hidden_service_hostname_output
  changed_when: False

- name: Register the Tor Hidden Service URL fact
  set_fact:
    tor_hidden_service_url: "http://{{ tor_hidden_service_hostname_output.stdout }}"

- name: Generate the hidden service virtual host and restart Nginx if it is updated
  template:
    src: hidden-service-vhost.j2
    dest: /etc/nginx/sites-available/streisand-hidden-service
    owner: root
    group: root
    mode: 0644
  notify: Restart Nginx for the Tor hidden service vhost

- name: Enable the virtual host
  file:
    path: /etc/nginx/sites-enabled/streisand-hidden-service
    src: /etc/nginx/sites-available/streisand-hidden-service
    state: link

- name: Discover the server fingerprint
  command: "awk '{ print $2 }' {{ tor_state_directory }}/fingerprint"
  register: tor_fingerprint

- name: Discover the obfs4 certificate details
  shell: cat "{{ tor_obfs_state_directory }}/obfs4_bridgeline.txt" | grep 'Bridge obfs4' | sed -e 's/^.*cert=\(.*\) .*$/\1/'
  register: tor_obfs4_certificate
  changed_when: False

# Generate the docs gateway page
- import_tasks: docs.yml

# This needs to be done after the docs folder structure is generated
- name: Copy the hidden service hostname to the webroot when in test client mode
  copy:
    src: "{{ tor_hidden_service_directory }}/hostname"
    remote_src: yes
    dest: "{{ tor_gateway_location }}/hidden-service-hostname.txt"
    force: yes

# Mirror the Tor browser bundle
- import_tasks: mirror.yml
