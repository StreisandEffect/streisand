---
- name: Make the directory where the Tor Project's mirrored files will be stored
  file:
    path: "{{ tor_mirror_location }}"
    owner: www-data
    group: www-data
    mode: 0755
    state: directory

- name: Discover the latest stable version of the Tor Browser Bundle
  # The Python code below can be cleaned up once the Tor Project has
  # finished transitioning away from putting the OS suffix in the
  # RecommendedTBBVersions file. This check should work with both
  # formats though.
  #
  # https://trac.torproject.org/projects/tor/ticket/8940#comment:28
  shell: curl -s 'https://www.torproject.org/projects/torbrowser/RecommendedTBBVersions' | python -c 'import json; import re; import sys; j = json.load(sys.stdin); print [re.sub(r"-.*$", "", tbb) for tbb in j if "a" not in tbb and "b" not in tbb][-1];'
  args:
    warn: no
  register: tor_latest_recommended_check

- name: Set the target Tor Browser Bundle version
  set_fact:
    tor_browser_bundle_version: "{{ tor_latest_recommended_check.stdout }}"

- name: "Import GPG key ID {{ tor_browser_developers_key_id }} for verifying {{ tor_project_name }} downloads"
  command: gpg --keyserver {{ gpg_key_server_address }} --recv-keys {{ tor_browser_developers_key_id }}
  register: gpg_recv_keys_result
  until: gpg_recv_keys_result | success
  retries: 10
  delay: 5

- name: Register the GPG Key fingerprint output
  command: gpg --fingerprint {{ tor_browser_developers_key_id }}
  register: retrieved_fingerprint

- name: Make sure the retrieved fingerprint perfectly matches the expected fingerprint
  assert: { that: "tor_browser_developers_expected_fingerprint in retrieved_fingerprint.stdout" }

- name: Include the mirror variables for Tor Browser Bundle
  include_vars: mirror.yml
