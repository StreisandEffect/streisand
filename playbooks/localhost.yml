---
# localhost.yml is an advanced provisioning option that doesn't use a genesis
# role to create a new server and instead applies Streisand to the localhost.

# Ensure Python is installed on the system
- import_playbook: python.yml

# Try and detect localhost's provider & apply required workarounds
- import_playbook: provider-detect.yml

- name: Prepare the localhost for Streisand
# =========================================
  hosts: streisand-host
  remote_user: "root"
  become: true

  tasks:
    - set_fact:
        streisand_genesis_role: "localhost"

    # If there's no streisand_ipv4_address set then we try our best using
    # the interface Ansible thinks is the default.
    - name: "Set the Streisand IPv4 address to the Ansible default: interface: {{ ansible_default_ipv4.alias }} address: {{ ansible_default_ipv4.address }}"
      set_fact:
        # The ansible_default_ipv4 address is calculated based on the default
        # ipv4 route to 8.8.8.8 for the system, and for local provisioning on
        # _most_ providers, seems to work well for finding the external facing IP.
        # See `provider-detect.yml` for cases where this approach doesn't work
        # (e.g. GCE) and workarounds.
        streisand_ipv4_address: "{{ ansible_default_ipv4.address }}"
      when: streisand_ipv4_address is not defined

- import_playbook: streisand.yml
...
