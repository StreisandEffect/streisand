---
- name: Provision the EC2 Server
# ==============================
  hosts: localhost
  connection: local
  gather_facts: yes

  vars:
    # The region dict is generated from ./util/print-aws-regions.py
    regions:
      "1": "ap-east-1"
      "2": "ap-northeast-1"
      "3": "ap-northeast-2"
      "4": "ap-northeast-3"
      "5": "ap-south-1"
      "6": "ap-southeast-1"
      "7": "ap-southeast-2"
      "8": "ca-central-1"
      "9": "eu-central-1"
      "10": "eu-north-1"
      "11": "eu-west-1"
      "12": "eu-west-2"
      "13": "eu-west-3"
      "14": "sa-east-1"
      "15": "us-east-1"
      "16": "us-east-2"
      "17": "us-west-1"
      "18": "us-west-2"

  # These variable files are included so the ec2-security-group role
  # knows which ports to open
  vars_files:
    - roles/openconnect/defaults/main.yml
    - roles/openvpn/defaults/main.yml
    - roles/shadowsocks/defaults/main.yml
    - roles/ssh/defaults/main.yml
    - roles/lets-encrypt/vars/main.yml
    - roles/streisand-gateway/defaults/main.yml
    - roles/stunnel/defaults/main.yml
    - roles/tor-bridge/defaults/main.yml
    - roles/wireguard/defaults/main.yml

  vars_prompt:
    # The region prompt is generated from ./util/print-aws-regions.py
    # Don't forget to update the default if it changes.
    - name: "aws_region_var"
      prompt: |
        In what region should the server be located?
           1. ap-east-1       Asia Pacific   (Hong Kong)
           2. ap-northeast-1  Asia Pacific   (Tokyo)
           3. ap-northeast-2  Asia Pacific   (Seoul)
           4. ap-northeast-3  Asia Pacific   (Osaka-Local)
           5. ap-south-1      Asia Pacific   (Mumbai)
           6. ap-southeast-1  Asia Pacific   (Singapore)
           7. ap-southeast-2  Asia Pacific   (Sydney)
           8. ca-central-1    Canada         (Central)
           9. eu-central-1    EU             (Frankfurt)
          10. eu-north-1      EU             (Stockholm)
          11. eu-west-1       EU             (Ireland)
          12. eu-west-2       EU             (London)
          13. eu-west-3       EU             (Paris)
          14. sa-east-1       South America  (SÃ£o Paulo)
          15. us-east-1       US East        (N. Virginia)
          16. us-east-2       US East        (Ohio)
          17. us-west-1       US West        (N. California)
          18. us-west-2       US West        (Oregon)
        Please choose the number of your region. Press enter for default (#16) region.
      default: "16"
      private: no

    - name: "aws_vpc_id_var"
      prompt: |

        In which VPC would you like to create the server and security group
        (e.g. vpc-89d740ee)?

        Press enter to use the default VPC.
      private: no

    - name: "aws_vpc_subnet_id_var"
      prompt: |

        From which subnet should the server receive an address (e.g. subnet-78d9a232)?

        Press enter to use the default subnet.
      private: no

    - name: "aws_instance_name"
      prompt: "\nWhat should the server be named? Press enter for default (streisand).\n"
      default: "streisand"
      private: no

    - name: "aws_access_key"
      prompt: "\n\nThe following information can be found in the IAM Management Console.\nhttps://console.aws.amazon.com/iam/home?#security_credential\n\nWhat is your AWS Access Key ID?\n"
      private: no

    - name: "aws_secret_key"
      prompt: "\nWhat is your AWS Secret Access Key?\n"
      private: no

    - name: "aws_session_token"
      prompt: "\nIf you use AWS Roles, what is your AWS Token? Press enter for none.\n"
      default: ""
      private: no

    - name: "confirmation"
      prompt: "\nStreisand will now set up your server. This process usually takes around ten minutes. Press Enter to begin setup...\n"

  pre_tasks:
    - name: Set the AWS Region fact
      set_fact:
        aws_region: "{{ regions[aws_region_var] }}"

    - name: Set the AWS VPC ID fact
      set_fact:
        aws_vpc_id: "{{ aws_vpc_id_var }}"
      when: aws_vpc_id_var != ""

    - name: Set the AWS VPC Subnet ID fact
      set_fact:
        aws_vpc_subnet_id: "{{ aws_vpc_subnet_id_var }}"
      when: aws_vpc_subnet_id_var != ""

  roles:
    - genesis-amazon

- import_playbook: ssh-setup.yml
- import_playbook: cloud-status.yml
- import_playbook: python.yml
- import_playbook: ec2-metadata-instance.yml
- import_playbook: streisand.yml
...
